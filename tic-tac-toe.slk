Semantics=SingleAssignment;

Agent Environment
-- maximum chain length 3
    Vars:
        counter: 0 .. 4;
        init: 0 .. 4;
        act_step: boolean;
        ok: 0.. 0;
        role_o: boolean;
        role_x: boolean;
        true_cell_1_1_b: boolean;
        next_cell_1_1_b: boolean;
        true_cell_1_1_o: boolean;
        next_cell_1_1_o: boolean;
        true_cell_1_1_x: boolean;
        next_cell_1_1_x: boolean;
        true_cell_1_2_b: boolean;
        next_cell_1_2_b: boolean;
        true_cell_1_2_o: boolean;
        next_cell_1_2_o: boolean;
        true_cell_1_2_x: boolean;
        next_cell_1_2_x: boolean;
        true_cell_2_1_b: boolean;
        next_cell_2_1_b: boolean;
        true_cell_2_1_o: boolean;
        next_cell_2_1_o: boolean;
        true_cell_2_1_x: boolean;
        next_cell_2_1_x: boolean;
        true_control_o: boolean;
        next_control_o: boolean;
        true_control_x: boolean;
        next_control_x: boolean;
        true_tried_o_1_1: boolean;
        next_tried_o_1_1: boolean;
        true_tried_o_1_2: boolean;
        next_tried_o_1_2: boolean;
        true_tried_o_2_1: boolean;
        next_tried_o_2_1: boolean;
        true_tried_x_1_1: boolean;
        next_tried_x_1_1: boolean;
        true_tried_x_1_2: boolean;
        next_tried_x_1_2: boolean;
        true_tried_x_2_1: boolean;
        next_tried_x_2_1: boolean;
        sees_o_fail_1: boolean;
        next_sees_o_fail_1: boolean;
        sees_o_success_1: boolean;
        next_sees_o_success_1: boolean;
        sees_x_fail_1: boolean;
        next_sees_x_fail_1: boolean;
        sees_x_success_1: boolean;
        next_sees_x_success_1: boolean;
        legal_o_mark_1_1: boolean;
        legal_o_mark_1_2: boolean;
        legal_o_mark_2_1: boolean;
        legal_o_noop: boolean;
        legal_x_mark_1_1: boolean;
        legal_x_mark_1_2: boolean;
        legal_x_mark_2_1: boolean;
        legal_x_noop: boolean;
        terminal: boolean;
        does_o_mark_1_1: boolean;
        done_o_mark_1_1_1: boolean;
        next_done_o_mark_1_1_1: boolean;
        does_o_mark_1_2: boolean;
        done_o_mark_1_2_1: boolean;
        next_done_o_mark_1_2_1: boolean;
        does_o_mark_2_1: boolean;
        done_o_mark_2_1_1: boolean;
        next_done_o_mark_2_1_1: boolean;
        does_o_noop: boolean;
        done_o_noop_1: boolean;
        next_done_o_noop_1: boolean;
        does_x_mark_1_1: boolean;
        done_x_mark_1_1_1: boolean;
        next_done_x_mark_1_1_1: boolean;
        does_x_mark_1_2: boolean;
        done_x_mark_1_2_1: boolean;
        next_done_x_mark_1_2_1: boolean;
        does_x_mark_2_1: boolean;
        done_x_mark_2_1_1: boolean;
        next_done_x_mark_2_1_1: boolean;
        does_x_noop: boolean;
        done_x_noop_1: boolean;
        next_done_x_noop_1: boolean;
        affect_cell_1_1: boolean;
        affect_cell_1_2: boolean;
        affect_cell_2_1: boolean;
        goal_o_0: boolean;
        goal_o_100: boolean;
        goal_o_50: boolean;
        goal_x_0: boolean;
        goal_x_100: boolean;
        goal_x_50: boolean;
        line_o: boolean;
        line_x: boolean;
    end Vars
    Actions = { none };
    Protocol:
        Other: {none};
    end Protocol
    Evolution:
        -- print the counters
        ok = 0 if (ok = 0);
        (init = init - 1) if (init > 0);
        (init = 0) if (init = 0);
        (counter = counter + 1) if !(init <> 0 or (terminal = true and counter = 0) or counter = 4);
        (counter = 0) if (init <> 0 or (terminal = true and counter = 0) or counter = 4);
        act_step = false if ((init > 1) or (counter < 4 and init = 0 and act_step = false) or (counter = 4 and init = 0 and act_step = true));
        act_step = true if !((init > 1) or (counter < 4 and init = 0 and act_step = false) or (counter = 4 and init = 0 and act_step = true));

        -- print the dependencies
        affect_cell_1_1=true if (((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)));
        affect_cell_1_1=false if !(((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)));
        affect_cell_1_2=true if (((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)));
        affect_cell_1_2=false if !(((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)));
        affect_cell_2_1=true if (((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)));
        affect_cell_2_1=false if !(((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)));
        goal_o_0=true if (((line_x = true)));
        goal_o_0=false if !(((line_x = true)));
        goal_o_100=true if (((line_o = true)));
        goal_o_100=false if !(((line_o = true)));
        goal_o_50=true if (((line_x = false) and (line_o = false)));
        goal_o_50=false if !(((line_x = false) and (line_o = false)));
        goal_x_0=true if (((line_o = true)));
        goal_x_0=false if !(((line_o = true)));
        goal_x_100=true if (((line_x = true)));
        goal_x_100=false if !(((line_x = true)));
        goal_x_50=true if (((line_x = false) and (line_o = false)));
        goal_x_50=false if !(((line_x = false) and (line_o = false)));
        legal_o_mark_1_1=true if (((true_tried_o_1_1 = false) and (true_control_o = true)));
        legal_o_mark_1_1=false if !(((true_tried_o_1_1 = false) and (true_control_o = true)));
        legal_o_mark_1_2=true if (((true_tried_o_1_2 = false) and (true_control_o = true)));
        legal_o_mark_1_2=false if !(((true_tried_o_1_2 = false) and (true_control_o = true)));
        legal_o_mark_2_1=true if (((true_tried_o_2_1 = false) and (true_control_o = true)));
        legal_o_mark_2_1=false if !(((true_tried_o_2_1 = false) and (true_control_o = true)));
        legal_o_noop=true if (((true_control_x = true)));
        legal_o_noop=false if !(((true_control_x = true)));
        legal_x_mark_1_1=true if (((true_tried_x_1_1 = false) and (true_control_x = true)));
        legal_x_mark_1_1=false if !(((true_tried_x_1_1 = false) and (true_control_x = true)));
        legal_x_mark_1_2=true if (((true_tried_x_1_2 = false) and (true_control_x = true)));
        legal_x_mark_1_2=false if !(((true_tried_x_1_2 = false) and (true_control_x = true)));
        legal_x_mark_2_1=true if (((true_tried_x_2_1 = false) and (true_control_x = true)));
        legal_x_mark_2_1=false if !(((true_tried_x_2_1 = false) and (true_control_x = true)));
        legal_x_noop=true if (((true_control_o = true)));
        legal_x_noop=false if !(((true_control_o = true)));
        line_o=true if (((true_cell_1_1_o = true)));
        line_o=false if !(((true_cell_1_1_o = true)));
        line_x=true if (((true_cell_1_1_x = true) and (true_cell_1_2_x = true)) or ((true_cell_1_1_x = true) and (true_cell_2_1_x = true)));
        line_x=false if !(((true_cell_1_1_x = true) and (true_cell_1_2_x = true)) or ((true_cell_1_1_x = true) and (true_cell_2_1_x = true)));
        next_cell_1_1_b=true if (((affect_cell_1_1 = false) and (true_cell_1_1_b = true)));
        next_cell_1_1_b=false if !(((affect_cell_1_1 = false) and (true_cell_1_1_b = true)));
        next_cell_1_1_o=true if (((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((true_cell_1_1_o = true)));
        next_cell_1_1_o=false if !(((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((true_cell_1_1_o = true)));
        next_cell_1_1_x=true if (((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((true_cell_1_1_x = true)));
        next_cell_1_1_x=false if !(((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((true_cell_1_1_x = true)));
        next_cell_1_2_b=true if (((affect_cell_1_2 = false) and (true_cell_1_2_b = true)));
        next_cell_1_2_b=false if !(((affect_cell_1_2 = false) and (true_cell_1_2_b = true)));
        next_cell_1_2_o=true if (((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((true_cell_1_2_o = true)));
        next_cell_1_2_o=false if !(((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((true_cell_1_2_o = true)));
        next_cell_1_2_x=true if (((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((true_cell_1_2_x = true)));
        next_cell_1_2_x=false if !(((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((true_cell_1_2_x = true)));
        next_cell_2_1_b=true if (((affect_cell_2_1 = false) and (true_cell_2_1_b = true)));
        next_cell_2_1_b=false if !(((affect_cell_2_1 = false) and (true_cell_2_1_b = true)));
        next_cell_2_1_o=true if (((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((true_cell_2_1_o = true)));
        next_cell_2_1_o=false if !(((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((true_cell_2_1_o = true)));
        next_cell_2_1_x=true if (((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((true_cell_2_1_x = true)));
        next_cell_2_1_x=false if !(((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((true_cell_2_1_x = true)));
        next_control_o=true if (((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((does_o_mark_1_1 = true) and (true_cell_1_1_x = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_x = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_x = true)));
        next_control_o=false if !(((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)) or ((does_o_mark_1_1 = true) and (true_cell_1_1_x = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_x = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_x = true)));
        next_control_x=true if (((does_x_mark_1_1 = true) and (true_cell_1_1_o = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_o = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_o = true)) or ((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)));
        next_control_x=false if !(((does_x_mark_1_1 = true) and (true_cell_1_1_o = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_o = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_o = true)) or ((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)));
        next_sees_o_fail_1=true if (((does_o_mark_1_1 = true) and (true_cell_1_1_x = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_x = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_x = true)));
        next_sees_o_fail_1=false if !(((does_o_mark_1_1 = true) and (true_cell_1_1_x = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_x = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_x = true)));
        next_sees_o_success_1=true if (((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)));
        next_sees_o_success_1=false if !(((does_o_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_o_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_o_mark_2_1 = true) and (true_cell_2_1_b = true)));
        next_sees_x_fail_1=true if (((does_x_mark_1_1 = true) and (true_cell_1_1_o = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_o = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_o = true)));
        next_sees_x_fail_1=false if !(((does_x_mark_1_1 = true) and (true_cell_1_1_o = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_o = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_o = true)));
        next_sees_x_success_1=true if (((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)));
        next_sees_x_success_1=false if !(((does_x_mark_1_1 = true) and (true_cell_1_1_b = true)) or ((does_x_mark_1_2 = true) and (true_cell_1_2_b = true)) or ((does_x_mark_2_1 = true) and (true_cell_2_1_b = true)));
        next_tried_o_1_1=true if (((does_o_mark_1_1 = true)) or ((true_tried_o_1_1 = true)));
        next_tried_o_1_1=false if !(((does_o_mark_1_1 = true)) or ((true_tried_o_1_1 = true)));
        next_tried_o_1_2=true if (((does_o_mark_1_2 = true)) or ((true_tried_o_1_2 = true)));
        next_tried_o_1_2=false if !(((does_o_mark_1_2 = true)) or ((true_tried_o_1_2 = true)));
        next_tried_o_2_1=true if (((does_o_mark_2_1 = true)) or ((true_tried_o_2_1 = true)));
        next_tried_o_2_1=false if !(((does_o_mark_2_1 = true)) or ((true_tried_o_2_1 = true)));
        next_tried_x_1_1=true if (((does_x_mark_1_1 = true)) or ((true_tried_x_1_1 = true)));
        next_tried_x_1_1=false if !(((does_x_mark_1_1 = true)) or ((true_tried_x_1_1 = true)));
        next_tried_x_1_2=true if (((does_x_mark_1_2 = true)) or ((true_tried_x_1_2 = true)));
        next_tried_x_1_2=false if !(((does_x_mark_1_2 = true)) or ((true_tried_x_1_2 = true)));
        next_tried_x_2_1=true if (((does_x_mark_2_1 = true)) or ((true_tried_x_2_1 = true)));
        next_tried_x_2_1=false if !(((does_x_mark_2_1 = true)) or ((true_tried_x_2_1 = true)));
        role_o=true if ((ok = 0));
        role_o=false if !((ok = 0));
        role_x=true if ((ok = 0));
        role_x=false if !((ok = 0));
        terminal=true if (((true_cell_1_1_b = false) and (true_cell_1_2_b = false) and (true_cell_2_1_b = false)) or ((line_x = true)) or ((line_o = true)));
        terminal=false if !(((true_cell_1_1_b = false) and (true_cell_1_2_b = false) and (true_cell_2_1_b = false)) or ((line_x = true)) or ((line_o = true)));

        -- print the next for actions
        next_done_o_mark_1_1_1 = does_o_mark_1_1 if (ok = 0);
        next_done_o_mark_1_2_1 = does_o_mark_1_2 if (ok = 0);
        next_done_o_mark_2_1_1 = does_o_mark_2_1 if (ok = 0);
        next_done_o_noop_1 = does_o_noop if (ok = 0);
        next_done_x_mark_1_1_1 = does_x_mark_1_1 if (ok = 0);
        next_done_x_mark_1_2_1 = does_x_mark_1_2 if (ok = 0);
        next_done_x_mark_2_1_1 = does_x_mark_2_1 if (ok = 0);
        next_done_x_noop_1 = does_x_noop if (ok = 0);
        -- local observation evolution
        does_o_mark_1_1 = true if (player_o.Action = mark_1_1 and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_o_mark_1_1 = false if (counter = 4 and act_step = true);
        does_o_mark_1_1 = does_o_mark_1_1  if !((counter = 4 and act_step = true) or (player_o.Action = mark_1_1 and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_o_mark_1_2 = true if (player_o.Action = mark_1_2 and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_o_mark_1_2 = false if (counter = 4 and act_step = true);
        does_o_mark_1_2 = does_o_mark_1_2  if !((counter = 4 and act_step = true) or (player_o.Action = mark_1_2 and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_o_mark_2_1 = true if (player_o.Action = mark_2_1 and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_o_mark_2_1 = false if (counter = 4 and act_step = true);
        does_o_mark_2_1 = does_o_mark_2_1  if !((counter = 4 and act_step = true) or (player_o.Action = mark_2_1 and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_o_noop = true if (player_o.Action = noop and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_o_noop = false if (counter = 4 and act_step = true);
        does_o_noop = does_o_noop  if !((counter = 4 and act_step = true) or (player_o.Action = noop and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_x_mark_1_1 = true if (player_x.Action = mark_1_1 and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_x_mark_1_1 = false if (counter = 4 and act_step = true);
        does_x_mark_1_1 = does_x_mark_1_1  if !((counter = 4 and act_step = true) or (player_x.Action = mark_1_1 and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_x_mark_1_2 = true if (player_x.Action = mark_1_2 and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_x_mark_1_2 = false if (counter = 4 and act_step = true);
        does_x_mark_1_2 = does_x_mark_1_2  if !((counter = 4 and act_step = true) or (player_x.Action = mark_1_2 and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_x_mark_2_1 = true if (player_x.Action = mark_2_1 and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_x_mark_2_1 = false if (counter = 4 and act_step = true);
        does_x_mark_2_1 = does_x_mark_2_1  if !((counter = 4 and act_step = true) or (player_x.Action = mark_2_1 and init = 0 and counter = 0 and act_step = true and terminal = false));
        does_x_noop = true if (player_x.Action = noop and init = 0 and counter = 0 and act_step = true and terminal = false);
        does_x_noop = false if (counter = 4 and act_step = true);
        does_x_noop = does_x_noop  if !((counter = 4 and act_step = true) or (player_x.Action = noop and init = 0 and counter = 0 and act_step = true and terminal = false));
        true_cell_1_1_b = next_cell_1_1_b if ((init = 0 and act_step = true and counter = 4));
        true_cell_1_1_b = true if (init = 4);
        true_cell_1_1_b = true_cell_1_1_b if !((init = 0 and act_step = true and counter = 4) or (init = 4));
        true_cell_1_1_o = next_cell_1_1_o if ((init = 0 and act_step = true and counter = 4));
        true_cell_1_1_o = true_cell_1_1_o if !((init = 0 and act_step = true and counter = 4));
        true_cell_1_1_x = next_cell_1_1_x if ((init = 0 and act_step = true and counter = 4));
        true_cell_1_1_x = true_cell_1_1_x if !((init = 0 and act_step = true and counter = 4));
        true_cell_1_2_b = next_cell_1_2_b if ((init = 0 and act_step = true and counter = 4));
        true_cell_1_2_b = true if (init = 4);
        true_cell_1_2_b = true_cell_1_2_b if !((init = 0 and act_step = true and counter = 4) or (init = 4));
        true_cell_1_2_o = next_cell_1_2_o if ((init = 0 and act_step = true and counter = 4));
        true_cell_1_2_o = true_cell_1_2_o if !((init = 0 and act_step = true and counter = 4));
        true_cell_1_2_x = next_cell_1_2_x if ((init = 0 and act_step = true and counter = 4));
        true_cell_1_2_x = true_cell_1_2_x if !((init = 0 and act_step = true and counter = 4));
        true_cell_2_1_b = next_cell_2_1_b if ((init = 0 and act_step = true and counter = 4));
        true_cell_2_1_b = true if (init = 4);
        true_cell_2_1_b = true_cell_2_1_b if !((init = 0 and act_step = true and counter = 4) or (init = 4));
        true_cell_2_1_o = next_cell_2_1_o if ((init = 0 and act_step = true and counter = 4));
        true_cell_2_1_o = true_cell_2_1_o if !((init = 0 and act_step = true and counter = 4));
        true_cell_2_1_x = next_cell_2_1_x if ((init = 0 and act_step = true and counter = 4));
        true_cell_2_1_x = true_cell_2_1_x if !((init = 0 and act_step = true and counter = 4));
        true_control_o = next_control_o if ((init = 0 and act_step = true and counter = 4));
        true_control_o = true_control_o if !((init = 0 and act_step = true and counter = 4));
        true_control_x = next_control_x if ((init = 0 and act_step = true and counter = 4));
        true_control_x = true if (init = 4);
        true_control_x = true_control_x if !((init = 0 and act_step = true and counter = 4) or (init = 4));
        true_tried_o_1_1 = next_tried_o_1_1 if ((init = 0 and act_step = true and counter = 4));
        true_tried_o_1_1 = true_tried_o_1_1 if !((init = 0 and act_step = true and counter = 4));
        true_tried_o_1_2 = next_tried_o_1_2 if ((init = 0 and act_step = true and counter = 4));
        true_tried_o_1_2 = true_tried_o_1_2 if !((init = 0 and act_step = true and counter = 4));
        true_tried_o_2_1 = next_tried_o_2_1 if ((init = 0 and act_step = true and counter = 4));
        true_tried_o_2_1 = true_tried_o_2_1 if !((init = 0 and act_step = true and counter = 4));
        true_tried_x_1_1 = next_tried_x_1_1 if ((init = 0 and act_step = true and counter = 4));
        true_tried_x_1_1 = true_tried_x_1_1 if !((init = 0 and act_step = true and counter = 4));
        true_tried_x_1_2 = next_tried_x_1_2 if ((init = 0 and act_step = true and counter = 4));
        true_tried_x_1_2 = true_tried_x_1_2 if !((init = 0 and act_step = true and counter = 4));
        true_tried_x_2_1 = next_tried_x_2_1 if ((init = 0 and act_step = true and counter = 4));
        true_tried_x_2_1 = true_tried_x_2_1 if !((init = 0 and act_step = true and counter = 4));
        done_o_mark_1_1_1 = next_done_o_mark_1_1_1 if ((init = 0 and act_step = true and counter = 4));
        done_o_mark_1_1_1 = done_o_mark_1_1_1 if !((init = 0 and act_step = true and counter = 4));
        done_o_mark_1_2_1 = next_done_o_mark_1_2_1 if ((init = 0 and act_step = true and counter = 4));
        done_o_mark_1_2_1 = done_o_mark_1_2_1 if !((init = 0 and act_step = true and counter = 4));
        done_o_mark_2_1_1 = next_done_o_mark_2_1_1 if ((init = 0 and act_step = true and counter = 4));
        done_o_mark_2_1_1 = done_o_mark_2_1_1 if !((init = 0 and act_step = true and counter = 4));
        done_o_noop_1 = next_done_o_noop_1 if ((init = 0 and act_step = true and counter = 4));
        done_o_noop_1 = done_o_noop_1 if !((init = 0 and act_step = true and counter = 4));
        done_x_mark_1_1_1 = next_done_x_mark_1_1_1 if ((init = 0 and act_step = true and counter = 4));
        done_x_mark_1_1_1 = done_x_mark_1_1_1 if !((init = 0 and act_step = true and counter = 4));
        done_x_mark_1_2_1 = next_done_x_mark_1_2_1 if ((init = 0 and act_step = true and counter = 4));
        done_x_mark_1_2_1 = done_x_mark_1_2_1 if !((init = 0 and act_step = true and counter = 4));
        done_x_mark_2_1_1 = next_done_x_mark_2_1_1 if ((init = 0 and act_step = true and counter = 4));
        done_x_mark_2_1_1 = done_x_mark_2_1_1 if !((init = 0 and act_step = true and counter = 4));
        done_x_noop_1 = next_done_x_noop_1 if ((init = 0 and act_step = true and counter = 4));
        done_x_noop_1 = done_x_noop_1 if !((init = 0 and act_step = true and counter = 4));
        sees_o_fail_1 = next_sees_o_fail_1 if ((init = 0 and act_step = true and counter = 4));
        sees_o_fail_1 = sees_o_fail_1 if !((init = 0 and act_step = true and counter = 4));
        sees_o_success_1 = next_sees_o_success_1 if ((init = 0 and act_step = true and counter = 4));
        sees_o_success_1 = sees_o_success_1 if !((init = 0 and act_step = true and counter = 4));
        sees_x_fail_1 = next_sees_x_fail_1 if ((init = 0 and act_step = true and counter = 4));
        sees_x_fail_1 = sees_x_fail_1 if !((init = 0 and act_step = true and counter = 4));
        sees_x_success_1 = next_sees_x_success_1 if ((init = 0 and act_step = true and counter = 4));
        sees_x_success_1 = sees_x_success_1 if !((init = 0 and act_step = true and counter = 4));
    end Evolution
end Agent

Agent player_o
    Lobsvars={init,counter,act_step, sees_o_fail_1, sees_o_success_1, legal_o_mark_1_1, legal_o_mark_1_2, legal_o_mark_2_1, legal_o_noop, done_o_mark_1_1_1, done_o_mark_1_2_1, done_o_mark_2_1_1, done_o_noop_1};
    Vars:

    end Vars
    Actions = {mark_1_1, mark_1_2, mark_2_1, noop, none};
    Protocol:
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_o_mark_1_1 = true): {mark_1_1};
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_o_mark_1_2 = true): {mark_1_2};
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_o_mark_2_1 = true): {mark_2_1};
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_o_noop = true): {noop};
        Other : {none};
    end Protocol
    Evolution:

    end Evolution
end Agent


Agent player_x
    Lobsvars={init,counter,act_step, sees_x_fail_1, sees_x_success_1, legal_x_mark_1_1, legal_x_mark_1_2, legal_x_mark_2_1, legal_x_noop, done_x_mark_1_1_1, done_x_mark_1_2_1, done_x_mark_2_1_1, done_x_noop_1};
    Vars:

    end Vars
    Actions = {mark_1_1, mark_1_2, mark_2_1, noop, none};
    Protocol:
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_x_mark_1_1 = true): {mark_1_1};
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_x_mark_1_2 = true): {mark_1_2};
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_x_mark_2_1 = true): {mark_2_1};
        (Environment.init = 0 and Environment.counter = 0 and Environment.act_step = true and Environment.legal_x_noop = true): {noop};
        Other : {none};
    end Protocol
    Evolution:

    end Evolution
end Agent

Evaluation
    t if (Environment.terminal = true and Environment.counter = 0 and Environment.init = 0 and Environment.act_step = true);
end Evaluation

InitStates
    Environment.counter = 0 and Environment.ok = 0 and Environment.init = 4 and Environment.act_step = false
    and Environment.role_o = false
    and Environment.role_x = false
    and Environment.true_cell_1_1_b = false
    and Environment.next_cell_1_1_b = false
    and Environment.true_cell_1_1_o = false
    and Environment.next_cell_1_1_o = false
    and Environment.true_cell_1_1_x = false
    and Environment.next_cell_1_1_x = false
    and Environment.true_cell_1_2_b = false
    and Environment.next_cell_1_2_b = false
    and Environment.true_cell_1_2_o = false
    and Environment.next_cell_1_2_o = false
    and Environment.true_cell_1_2_x = false
    and Environment.next_cell_1_2_x = false
    and Environment.true_cell_2_1_b = false
    and Environment.next_cell_2_1_b = false
    and Environment.true_cell_2_1_o = false
    and Environment.next_cell_2_1_o = false
    and Environment.true_cell_2_1_x = false
    and Environment.next_cell_2_1_x = false
    and Environment.true_control_o = false
    and Environment.next_control_o = false
    and Environment.true_control_x = false
    and Environment.next_control_x = false
    and Environment.true_tried_o_1_1 = false
    and Environment.next_tried_o_1_1 = false
    and Environment.true_tried_o_1_2 = false
    and Environment.next_tried_o_1_2 = false
    and Environment.true_tried_o_2_1 = false
    and Environment.next_tried_o_2_1 = false
    and Environment.true_tried_x_1_1 = false
    and Environment.next_tried_x_1_1 = false
    and Environment.true_tried_x_1_2 = false
    and Environment.next_tried_x_1_2 = false
    and Environment.true_tried_x_2_1 = false
    and Environment.next_tried_x_2_1 = false
    and Environment.sees_o_fail_1 = false
    and Environment.next_sees_o_fail_1 = false
    and Environment.sees_o_success_1 = false
    and Environment.next_sees_o_success_1 = false
    and Environment.sees_x_fail_1 = false
    and Environment.next_sees_x_fail_1 = false
    and Environment.sees_x_success_1 = false
    and Environment.next_sees_x_success_1 = false
    and Environment.legal_o_mark_1_1 = false
    and Environment.legal_o_mark_1_2 = false
    and Environment.legal_o_mark_2_1 = false
    and Environment.legal_o_noop = false
    and Environment.legal_x_mark_1_1 = false
    and Environment.legal_x_mark_1_2 = false
    and Environment.legal_x_mark_2_1 = false
    and Environment.legal_x_noop = false
    and Environment.terminal = false
    and Environment.does_o_mark_1_1 = false
    and Environment.done_o_mark_1_1_1 = false
    and Environment.next_done_o_mark_1_1_1 = false
    and Environment.does_o_mark_1_2 = false
    and Environment.done_o_mark_1_2_1 = false
    and Environment.next_done_o_mark_1_2_1 = false
    and Environment.does_o_mark_2_1 = false
    and Environment.done_o_mark_2_1_1 = false
    and Environment.next_done_o_mark_2_1_1 = false
    and Environment.does_o_noop = false
    and Environment.done_o_noop_1 = false
    and Environment.next_done_o_noop_1 = false
    and Environment.does_x_mark_1_1 = false
    and Environment.done_x_mark_1_1_1 = false
    and Environment.next_done_x_mark_1_1_1 = false
    and Environment.does_x_mark_1_2 = false
    and Environment.done_x_mark_1_2_1 = false
    and Environment.next_done_x_mark_1_2_1 = false
    and Environment.does_x_mark_2_1 = false
    and Environment.done_x_mark_2_1_1 = false
    and Environment.next_done_x_mark_2_1_1 = false
    and Environment.does_x_noop = false
    and Environment.done_x_noop_1 = false
    and Environment.next_done_x_noop_1 = false
    and Environment.affect_cell_1_1 = false    and Environment.affect_cell_1_2 = false    and Environment.affect_cell_2_1 = false    and Environment.goal_o_0 = false    and Environment.goal_o_100 = false    and Environment.goal_o_50 = false    and Environment.goal_x_0 = false    and Environment.goal_x_100 = false    and Environment.goal_x_50 = false    and Environment.line_o = false    and Environment.line_x = false;
end InitStates

Groups
end Groups

Fairness
end Fairness

Formulae
    AF t;
end Formulae
